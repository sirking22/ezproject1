import os
from notion_client import Client

# Initialize Notion client
notion = Client(auth=os.environ["NOTION_TOKEN"])

# Database IDs
TASKS_DB = "9c5f4269d61449b6a7485579a3c21da3"
KPI_DB = "1d6ace03d9ff80bfb809ed21dfd2150c" 
RDT_DB = "195ace03d9ff80c1a1b0d236ec3564d2"
TEMPLATES_DB = os.environ["NOTION_TASKS_TEMPLATES_DB_ID"]

def auto_setup_system():
    """Do everything possible automatically, provide precise manual steps for the rest"""
    
    print("üöÄ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê –°–ò–°–¢–ï–ú–´")
    print("=" * 60)
    
    try:
        # 1. Check existing structure
        print("üìä –®–ê–ì 1: –ê–ù–ê–õ–ò–ó –¢–ï–ö–£–©–ï–ô –°–¢–†–£–ö–¢–£–†–´")
        
        tasks_db = notion.databases.retrieve(database_id=TASKS_DB)
        kpi_db = notion.databases.retrieve(database_id=KPI_DB)
        rdt_db = notion.databases.retrieve(database_id=RDT_DB)
        
        # Check TASKS ‚Üí KPI relation
        tasks_to_kpi = False
        for prop_name, prop_info in tasks_db['properties'].items():
            if (prop_info['type'] == 'relation' and 
                prop_info['relation']['database_id'] == KPI_DB):
                tasks_to_kpi = True
                print(f"‚úÖ TASKS ‚Üí KPI —Å–≤—è–∑—å –Ω–∞–π–¥–µ–Ω–∞: {prop_name}")
        
        if not tasks_to_kpi:
            print("‚ùå TASKS ‚Üí KPI —Å–≤—è–∑—å –ù–ï –Ω–∞–π–¥–µ–Ω–∞")
        
        # Check KPI ‚Üí RDT relation  
        kpi_to_rdt = False
        for prop_name, prop_info in kpi_db['properties'].items():
            if (prop_info['type'] == 'relation' and
                prop_info['relation']['database_id'] == RDT_DB):
                kpi_to_rdt = True
                print(f"‚úÖ KPI ‚Üí RDT —Å–≤—è–∑—å –Ω–∞–π–¥–µ–Ω–∞: {prop_name}")
        
        # 2. Create sample KPI records if needed
        print(f"\nüìù –®–ê–ì 2: –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–´–• KPI –ó–ê–ü–ò–°–ï–ô")
        
        kpi_records = notion.databases.query(database_id=KPI_DB, page_size=5)
        if len(kpi_records['results']) < 3:
            # Create basic KPI records for polygraphy
            sample_kpis = [
                "–ü–æ–ª–∏–≥—Ä–∞—Ñ–∏—è - –ö–∞—á–µ—Å—Ç–≤–æ",
                "–ü–æ–ª–∏–≥—Ä–∞—Ñ–∏—è - –°–∫–æ—Ä–æ—Å—Ç—å", 
                "–ü–æ–ª–∏–≥—Ä–∞—Ñ–∏—è - –¢–æ—á–Ω–æ—Å—Ç—å"
            ]
            
            for kpi_name in sample_kpis:
                try:
                    notion.pages.create(
                        parent={"database_id": KPI_DB},
                        properties={
                            "Name": {
                                "title": [{"text": {"content": kpi_name}}]
                            }
                        }
                    )
                    print(f"‚úÖ –°–æ–∑–¥–∞–Ω KPI: {kpi_name}")
                except:
                    print(f"‚ö†Ô∏è KPI —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {kpi_name}")
        
        # 3. Provide exact manual steps
        print(f"\nüîß –®–ê–ì 3: –¢–û–ß–ù–´–ï –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø –†–£–ß–ù–û–ô –ù–ê–°–¢–†–û–ô–ö–ò")
        print("=" * 60)
        
        print("üìã –í KPI –ë–ê–ó–ï –î–û–ë–ê–í–ò–¢–¨ –ü–û–õ–Ø:")
        print(f"üîó https://www.notion.so/{KPI_DB.replace('-', '')}")
        
        kpi_formulas = [
            ("–í—Å–µ–≥–æ –∑–∞–¥–∞—á", "number", "–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á"),
            ("–ó–∞–¥–∞—á–∏ –≤ —Å—Ä–æ–∫", "number", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –≤ —Å—Ä–æ–∫"),
            ("–ó–∞–¥–∞—á–∏ –±–µ–∑ –ø—Ä–∞–≤–æ–∫", "number", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á –±–µ–∑ –ø—Ä–∞–≤–æ–∫"),
            ("% –≤ —Å—Ä–æ–∫", "formula", 'round(prop("–ó–∞–¥–∞—á–∏ –≤ —Å—Ä–æ–∫") / prop("–í—Å–µ–≥–æ –∑–∞–¥–∞—á") * 100)'),
            ("% –±–µ–∑ –ø—Ä–∞–≤–æ–∫", "formula", 'round(prop("–ó–∞–¥–∞—á–∏ –±–µ–∑ –ø—Ä–∞–≤–æ–∫") / prop("–í—Å–µ–≥–æ –∑–∞–¥–∞—á") * 100)')
        ]
        
        for i, (name, field_type, formula) in enumerate(kpi_formulas, 1):
            print(f"{i}. –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª–µ '{name}' (—Ç–∏–ø: {field_type})")
            if field_type == "formula":
                print(f"   –§–æ—Ä–º—É–ª–∞: {formula}")
        
        print(f"\nüìã –í RDT –ë–ê–ó–ï –ò–ó–ú–ï–ù–ò–¢–¨ –ü–û–õ–Ø:")
        print(f"üîó https://www.notion.so/{RDT_DB.replace('-', '')}")
        
        rdt_changes = [
            ("% –≤ —Å—Ä–æ–∫", "–ó–∞–º–µ–Ω–∏—Ç—å formula –Ω–∞ rollup –∏–∑ KPI ‚Üí % –≤ —Å—Ä–æ–∫"),
            ("% –±–µ–∑ –ø—Ä–∞–≤–æ–∫", "–ó–∞–º–µ–Ω–∏—Ç—å formula –Ω–∞ rollup –∏–∑ KPI ‚Üí % –±–µ–∑ –ø—Ä–∞–≤–æ–∫"),
            ("–ö–∞—á–µ—Å—Ç–≤–æ", "–ó–∞–º–µ–Ω–∏—Ç—å formula –Ω–∞ rollup –∏–∑ KPI ‚Üí —Å—Ä–µ–¥–Ω–µ–µ –∏–∑ % –ø–æ–ª–µ–π")
        ]
        
        for i, (field, action) in enumerate(rdt_changes, 1):
            print(f"{i}. {field}: {action}")
        
        # 4. Test the connection
        print(f"\nüß™ –®–ê–ì 4: –ü–†–û–í–ï–†–ö–ê –°–í–Ø–ó–ï–ô")
        
        test_task_exists = False
        tasks_response = notion.databases.query(
            database_id=TASKS_DB,
            filter={
                "property": "–ü–æ–¥–∑–∞–¥–∞—á–∏",
                "title": {"contains": "–¢–ï–°–¢:"}
            },
            page_size=1
        )
        
        if tasks_response['results']:
            test_task = tasks_response['results'][0]
            task_title = test_task['properties']['–ü–æ–¥–∑–∞–¥–∞—á–∏']['title'][0]['text']['content']
            print(f"‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –Ω–∞–π–¥–µ–Ω–∞: {task_title}")
            print(f"üîó {test_task['url']}")
            test_task_exists = True
        
        # 5. Provide next steps
        print(f"\nüéØ –°–õ–ï–î–£–Æ–©–ò–ï –î–ï–ô–°–¢–í–ò–Ø:")
        print("1. ‚úÖ –ü–æ–ª–∏–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ —à–∞–±–ª–æ–Ω—ã —Å–æ–∑–¥–∞–Ω—ã")
        print("2. ‚è≥ –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—è –≤ KPI (5 –º–∏–Ω)")
        print("3. ‚è≥ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å rollup –≤ RDT (3 –º–∏–Ω)")
        if test_task_exists:
            print("4. ‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –≥–æ—Ç–æ–≤–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏")
        print("5. ‚è≥ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å—é —Ü–µ–ø–æ—á–∫—É")
        
        print(f"\nüöÄ –ì–û–¢–û–í–ù–û–°–¢–¨ –°–ò–°–¢–ï–ú–´: 70%")
        print("–û—Å—Ç–∞–ª–∏—Å—å —Ç–æ–ª—å–∫–æ —Ä—É—á–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª–µ–π!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    auto_setup_system() 