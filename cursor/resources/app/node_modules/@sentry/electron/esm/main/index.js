export { DEFAULT_USER_INCLUDES, NodeClient, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, Scope, SentryContextManager, addBreadcrumb, addEventProcessor, addIntegration, addOpenTelemetryInstrumentation, addRequestDataToEvent, amqplibIntegration, captureCheckIn, captureConsoleIntegration, captureEvent, captureException, captureFeedback, captureMessage, captureSession, close, connectIntegration, consoleIntegration, contextLinesIntegration, continueTrace, createGetModuleFromFilename, createTransport, cron, dataloaderIntegration, debugIntegration, dedupeIntegration, endSession, expressErrorHandler, expressIntegration, extraErrorDataIntegration, extractRequestData, fastifyIntegration, flush, fsIntegration, functionToStringIntegration, generateInstrumentOnce, genericPoolIntegration, getActiveSpan, getAutoPerformanceIntegrations, getClient, getCurrentHub, getCurrentScope, getGlobalScope, getIsolationScope, getRootSpan, getSpanDescendants, getSpanStatusFromHttpCode, getTraceData, getTraceMetaTags, graphqlIntegration, hapiIntegration, httpIntegration, inboundFiltersIntegration, initOpenTelemetry, isInitialized, kafkaIntegration, koaIntegration, lastEventId, linkedErrorsIntegration, localVariablesIntegration, lruMemoizerIntegration, metrics, modulesIntegration, mongoIntegration, mongooseIntegration, mysql2Integration, mysqlIntegration, nativeNodeFetchIntegration, nestIntegration, nodeContextIntegration, onUnhandledRejectionIntegration, parameterize, postgresIntegration, prismaIntegration, profiler, redisIntegration, requestDataIntegration, rewriteFramesIntegration, sessionTimingIntegration, setContext, setCurrentClient, setExtra, setExtras, setHttpStatus, setMeasurement, setNodeAsyncContextStrategy, setTag, setTags, setUser, setupConnectErrorHandler, setupExpressErrorHandler, setupFastifyErrorHandler, setupHapiErrorHandler, setupKoaErrorHandler, setupNestErrorHandler, spanToBaggageHeader, spanToJSON, spanToTraceHeader, spotlightIntegration, startInactiveSpan, startNewTrace, startSession, startSpan, startSpanManual, suppressTracing, trpcMiddleware, validateOpenTelemetrySetup, withActiveSpan, withIsolationScope, withMonitor, withScope, zodErrorsIntegration } from '@sentry/node';
export { electronBreadcrumbsIntegration } from './integrations/electron-breadcrumbs.js';
export { onUncaughtExceptionIntegration } from './integrations/onuncaughtexception.js';
export { sentryMinidumpIntegration } from './integrations/sentry-minidump/index.js';
export { electronMinidumpIntegration } from './integrations/electron-minidump.js';
export { preloadInjectionIntegration } from './integrations/preload-injection.js';
export { mainProcessSessionIntegration } from './integrations/main-process-session.js';
export { browserWindowSessionIntegration } from './integrations/browser-window-session.js';
export { additionalContextIntegration } from './integrations/additional-context.js';
export { electronNetIntegration } from './integrations/net-breadcrumbs.js';
export { childProcessIntegration } from './integrations/child-process.js';
export { screenshotsIntegration } from './integrations/screenshots.js';
export { rendererProfileFromIpc } from './integrations/renderer-profiling.js';
export { normalizePathsIntegration } from './integrations/normalize-paths.js';
export { electronContextIntegration } from './integrations/electron-context.js';
export { anrIntegration } from './integrations/anr.js';
export { makeElectronTransport } from './transports/electron-net.js';
export { makeElectronOfflineTransport } from './transports/electron-offline-net.js';
export { getDefaultIntegrations, init } from './sdk.js';
export { defaultStackParser } from './stack-parse.js';
export { IPCMode } from '../common/ipc.js';//# sourceMappingURL=http://go/sourcemap/sourcemaps/5b19bac7a947f54e4caa3eb7e4c5fbf832389850/node_modules/@sentry/electron/esm/main/index.js.map
