#!/usr/bin/env python3
"""
–ì–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã Notion-Telegram-LLM
"""

import asyncio
import sys
import os
from typing import Optional

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from src.telegram.bot import TelegramBot
from src.telegram.admin_bot import admin_bot
from src.automation.daily_automation import DailyAutomation
# from src.utils.performance_monitor import performance_monitor

class SystemManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä —Å–∏—Å—Ç–µ–º—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ä–µ–∂–∏–º–∞–º–∏"""
    
    def __init__(self):
        self.bot: Optional[TelegramBot] = None
        self.admin_bot: Optional[type(admin_bot)] = None
        self.automation: Optional[DailyAutomation] = None
    
    async def run_bot_mode(self):
        """–ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ –æ–±—ã—á–Ω–æ–≥–æ –±–æ—Ç–∞"""
        print("ü§ñ –ó–∞–ø—É—Å–∫ –æ–±—ã—á–Ω–æ–≥–æ Telegram –±–æ—Ç–∞...")
        self.bot = TelegramBot()
        await self.bot.run()
    
    async def run_admin_mode(self):
        """–ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞"""
        print("üëë –ó–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ Telegram –±–æ—Ç–∞...")
        await admin_bot.run()
    
    async def run_automation_mode(self):
        """–ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏"""
        print("‚öôÔ∏è –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏...")
        self.automation = DailyAutomation()
        await self.automation.run()
    
    async def run_full_mode(self):
        """–ó–∞–ø—É—Å–∫ –≤ –ø–æ–ª–Ω–æ–º —Ä–µ–∂–∏–º–µ (–±–æ—Ç + –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è)"""
        print("üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–µ
        bot_task = asyncio.create_task(self.run_bot_mode())
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é –≤ —Ñ–æ–Ω–µ
        automation_task = asyncio.create_task(self.run_automation_mode())
        
        try:
            # –ñ–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–¥–∞—á
            await asyncio.gather(bot_task, automation_task)
        except KeyboardInterrupt:
            print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã...")
            bot_task.cancel()
            automation_task.cancel()
    
    async def run_test_mode(self):
        """–ó–∞–ø—É—Å–∫ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ"""
        print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞...")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≥–µ–Ω—Ç–æ–≤
        from src.agents.agent_core import agent_core
        
        print("üìã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≥–µ–Ω—Ç–æ–≤...")
        prompts = await agent_core.load_prompts_from_notion(force_refresh=True)
        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∞–≥–µ–Ω—Ç–æ–≤: {len(prompts)}")
        
        # –£–ø—Ä–æ—â—ë–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ performance_monitor
        print("üìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã...")
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ")
        
        print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) < 2:
        print("""
üöÄ **Notion-Telegram-LLM System**

–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∂–∏–º—ã:
‚Ä¢ bot - –û–±—ã—á–Ω—ã–π Telegram –±–æ—Ç
‚Ä¢ admin - –ê–¥–º–∏–Ω—Å–∫–∏–π Telegram –±–æ—Ç
‚Ä¢ automation - –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
‚Ä¢ full - –ü–æ–ª–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ (–±–æ—Ç + –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è)
‚Ä¢ test - –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python main.py [—Ä–µ–∂–∏–º]
–ü—Ä–∏–º–µ—Ä—ã:
‚Ä¢ python main.py bot
‚Ä¢ python main.py admin
‚Ä¢ python main.py full
        """)
        return
    
    mode = sys.argv[1].lower()
    manager = SystemManager()
    
    try:
        if mode == "bot":
            await manager.run_bot_mode()
        elif mode == "admin":
            await manager.run_admin_mode()
        elif mode == "automation":
            await manager.run_automation_mode()
        elif mode == "full":
            await manager.run_full_mode()
        elif mode == "test":
            await manager.run_test_mode()
        else:
            print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∂–∏–º: {mode}")
            print("–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∂–∏–º—ã: bot, admin, automation, full, test")
    
    except KeyboardInterrupt:
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(main())