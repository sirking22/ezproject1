#!/usr/bin/env python3
"""
üì± –ü–û–õ–£–ß–ï–ù–ò–ï TELEGRAM CHAT ID
"""

import os
import requests
import time
from dotenv import load_dotenv

def get_telegram_chat_id():
    """–ü–æ–ª—É—á–∞–µ—Ç Chat ID –∏–∑ Telegram –±–æ—Ç–∞"""
    load_dotenv()
    
    token = os.getenv("TELEGRAM_BOT_TOKEN")
    if not token:
        print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
        return None
    
    print("üîç –ü–æ–ª—É—á–µ–Ω–∏–µ Chat ID...")
    print("üì± –û—Ç–ø—Ä–∞–≤—å –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É @dotLife_bot")
    print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è...")
    
    # –ñ–¥–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–∞–π–º–∞—É—Ç–æ–º
    for attempt in range(10):
        try:
            # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            url = f"https://api.telegram.org/bot{token}/getUpdates"
            response = requests.get(url, timeout=10)
            
            if response.status_code == 200:
                data = response.json()
                
                if data.get("ok") and data.get("result"):
                    updates = data["result"]
                    
                    if updates:
                        # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                        latest_update = updates[-1]
                        
                        if "message" in latest_update:
                            chat = latest_update["message"]["chat"]
                            chat_id = chat["id"]
                            chat_type = chat["type"]
                            user_name = chat.get("first_name", "Unknown")
                            
                            print(f"‚úÖ Chat ID –Ω–∞–π–¥–µ–Ω!")
                            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_name}")
                            print(f"üí¨ –¢–∏–ø —á–∞—Ç–∞: {chat_type}")
                            print(f"üÜî Chat ID: {chat_id}")
                            
                            # –û–±–Ω–æ–≤–ª—è–µ–º .env —Ñ–∞–π–ª
                            update_env_file(chat_id)
                            
                            return chat_id
                        else:
                            print(f"‚è≥ –ü–æ–ø—ã—Ç–∫–∞ {attempt + 1}/10: —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                    else:
                        print(f"‚è≥ –ü–æ–ø—ã—Ç–∫–∞ {attempt + 1}/10: –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ API: {data.get('description', 'Unknown')}")
                    break
            else:
                print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
                break
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            break
        
        # –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π
        if attempt < 9:
            print("‚è≥ –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã...")
            time.sleep(3)
    
    print("‚ùå Chat ID –Ω–µ –Ω–∞–π–¥–µ–Ω")
    print("üì± –£–±–µ–¥–∏—Å—å, —á—Ç–æ —Ç—ã –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É @dotLife_bot")
    return None

def update_env_file(chat_id):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç .env —Ñ–∞–π–ª —Å Chat ID"""
    try:
        # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π .env
        with open(".env", "r", encoding="utf-8") as f:
            lines = f.readlines()
        
        # –ò—â–µ–º —Å—Ç—Ä–æ–∫—É —Å TELEGRAM_CHAT_ID
        updated = False
        for i, line in enumerate(lines):
            if line.startswith("TELEGRAM_CHAT_ID="):
                lines[i] = f"TELEGRAM_CHAT_ID={chat_id}\n"
                updated = True
                break
        
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –¥–æ–±–∞–≤–ª—è–µ–º
        if not updated:
            lines.append(f"TELEGRAM_CHAT_ID={chat_id}\n")
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
        with open(".env", "w", encoding="utf-8") as f:
            f.writelines(lines)
        
        print("‚úÖ .env —Ñ–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è .env: {e}")
        print(f"üìù –î–æ–±–∞–≤—å –≤—Ä—É—á–Ω—É—é –≤ .env: TELEGRAM_CHAT_ID={chat_id}")

def test_telegram_send():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è"""
    load_dotenv()
    
    token = os.getenv("TELEGRAM_BOT_TOKEN")
    chat_id = os.getenv("TELEGRAM_CHAT_ID")
    
    if not token or not chat_id:
        print("‚ùå –¢–æ–∫–µ–Ω –∏–ª–∏ Chat ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        return False
    
    try:
        message = "üß™ –¢–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç Quick Voice Assistant"
        
        url = f"https://api.telegram.org/bot{token}/sendMessage"
        payload = {
            "chat_id": chat_id,
            "text": message
        }
        
        response = requests.post(url, json=payload, timeout=10)
        
        if response.status_code == 200:
            result = response.json()
            if result.get("ok"):
                print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {result.get('description')}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
    
    return False

def send_test_message():
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    load_dotenv()
    
    token = os.getenv("TELEGRAM_BOT_TOKEN")
    if not token:
        print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    try:
        # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        url = f"https://api.telegram.org/bot{token}/getMe"
        response = requests.get(url, timeout=10)
        
        if response.status_code == 200:
            bot_data = response.json()
            if bot_data.get("ok"):
                bot_info = bot_data["result"]
                username = bot_info.get("username")
                print(f"ü§ñ –ë–æ—Ç –Ω–∞–π–¥–µ–Ω: @{username}")
                print(f"üì± –û—Ç–ø—Ä–∞–≤—å —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É @{username}")
                return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üì±" + "="*50)
    print("üéØ –ü–û–õ–£–ß–ï–ù–ò–ï TELEGRAM CHAT ID")
    print("="*52)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π Chat ID
    load_dotenv()
    current_chat_id = os.getenv("TELEGRAM_CHAT_ID")
    
    if current_chat_id:
        print(f"üìã –¢–µ–∫—É—â–∏–π Chat ID: {current_chat_id}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏...")
        if test_telegram_send():
            print("‚úÖ Chat ID —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
            return
        else:
            print("‚ùå Chat ID –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–æ—Ç–∞
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–æ—Ç–∞...")
    if not send_test_message():
        print("‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –±–æ—Ç–æ–º")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π Chat ID
    chat_id = get_telegram_chat_id()
    
    if chat_id:
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ Chat ID...")
        test_telegram_send()
    
    print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –ó–∞–ø—É—Å—Ç–∏: python setup_real_services.py")
    print("2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π –ø–æ–ª–Ω—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é")
    print("3. –£—Å—Ç–∞–Ω–æ–≤–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —á–∞—Å—ã")

if __name__ == "__main__":
    main() 