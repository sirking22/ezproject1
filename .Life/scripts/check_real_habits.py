#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –±–∞–∑—ã –ø—Ä–∏–≤—ã—á–µ–∫ —Å –ª–æ–≥–æ–º:
- –ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏ (archived=False)
- –ê—Ä—Ö–∏–≤–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏ (archived=True)
- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ –Ω–∞–∑–≤–∞–Ω–∏—è
"""

import os
from notion_client import Client
from dotenv import load_dotenv

load_dotenv()

# –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π ID –±–∞–∑—ã –ø—Ä–∏–≤—ã—á–µ–∫
HABITS_DB_ID = "1fddb2b98a1b8053a54aedf250530798"

def check_real_habits():
    """–ü—Ä–æ–≤–µ—Ä—è—é —Ä–µ–∞–ª—å–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–∞–∑—ã –ø—Ä–∏–≤—ã—á–µ–∫"""
    
    client = Client(auth=os.getenv("NOTION_TOKEN"))
    
    print("üîç –ü—Ä–æ–≤–µ—Ä—è—é —Ä–µ–∞–ª—å–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–∞–∑—ã –ø—Ä–∏–≤—ã—á–µ–∫...")
    print(f"üìã ID –±–∞–∑—ã: {HABITS_DB_ID}")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–∏–≤—ã—á–∫–∏ (Notion API –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ, –≤–∫–ª—é—á–∞—è –∞—Ä—Ö–∏–≤–Ω—ã–µ)
        habits = client.databases.query(database_id=HABITS_DB_ID)
        all_habits = habits['results']
        active = [h for h in all_habits if not h.get('archived', False)]
        archived = [h for h in all_habits if h.get('archived', False)]
        print(f"\n=== –õ–û–ì ===")
        print(f"–í—Å–µ–≥–æ –ø—Ä–∏–≤—ã—á–µ–∫ (API): {len(all_habits)}")
        print(f"–ê–∫—Ç–∏–≤–Ω—ã—Ö (archived=False): {len(active)}")
        print(f"–ê—Ä—Ö–∏–≤–Ω—ã—Ö (archived=True): {len(archived)}")
        print(f"\n--- –ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏ ---")
        for i, habit in enumerate(active, 1):
            name = habit.get('properties', {}).get('–ü—Ä–∏–≤—ã—á–∫–∞', {}).get('title', [{}])[0].get('plain_text', '–ë–ï–ó –ù–ê–ó–í–ê–ù–ò–Ø')
            print(f"  {i}. {name}")
        print(f"\n--- –ê—Ä—Ö–∏–≤–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏ ---")
        for i, habit in enumerate(archived, 1):
            name = habit.get('properties', {}).get('–ü—Ä–∏–≤—ã—á–∫–∞', {}).get('title', [{}])[0].get('plain_text', '–ë–ï–ó –ù–ê–ó–í–ê–ù–ò–Ø')
            print(f"  {i}. {name}")
        print(f"\n=== –ö–û–ù–ï–¶ –õ–û–ì–ê ===\n")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ –±–∞–∑—ã
        print("üîß –°–≤–æ–π—Å—Ç–≤–∞ –±–∞–∑—ã:")
        db_info = client.databases.retrieve(database_id=HABITS_DB_ID)
        for prop_name, prop_info in db_info['properties'].items():
            print(f"  - {prop_name}: {prop_info['type']}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    check_real_habits() 