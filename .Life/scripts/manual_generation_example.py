#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Blender Engine –≤ —Ä—É—á–Ω–æ–º —Ä–µ–∂–∏–º–µ.
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'src'))

from integrations.blender_engine import (
    BlenderEngine, ObjectSpec, ObjectType, Dimensions, 
    MeshSettings, MaterialSettings, MaterialType
)
import logging

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def main():
    logger.info("üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä—É—á–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–±—ä–µ–∫—Ç–æ–≤...")
    
    engine = BlenderEngine()
    
    if not engine.available:
        logger.error("‚ùå Blender –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—É—Ç—å –≤ `blender_engine.py`.")
        return

    # 1. –û–ø–∏—à–∏—Ç–µ –æ–±—ä–µ–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å
    specs = [
        ObjectSpec(
            name="Manual_Cube",
            object_type=ObjectType.CUBE,
            dimensions=Dimensions(width=50, height=80, depth=50),
            material_settings=MaterialSettings(
                material_type=MaterialType.PLASTIC,
                color=(0.1, 0.4, 0.8, 1.0)
            ),
            position=(-100, 0, 0)
        ),
        ObjectSpec(
            name="Manual_Organic_Lamp",
            object_type=ObjectType.ORGANIC_LAMP,
            dimensions=Dimensions(radius=40),
            mesh_settings=MeshSettings(subdivisions=2),
            material_settings=MaterialSettings(
                material_type=MaterialType.METAL,
                metallic=0.8,
                roughness=0.2,
                color=(0.9, 0.7, 0.2, 1.0)
            ),
            position=(0, 0, 0)
        ),
        ObjectSpec(
            name="Manual_Glass_Sphere",
            object_type=ObjectType.SPHERE,
            dimensions=Dimensions(radius=30),
            material_settings=MaterialSettings(
                material_type=MaterialType.GLASS,
                ior=1.52
            ),
            position=(100, 0, 0)
        )
    ]
    
    # 2. –ü–æ–ª—É—á–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞
    try:
        command, script_path = engine.prepare_manual_run(specs)
        
        logger.info("‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≥–æ—Ç–æ–≤–∞!")
        logger.info("--------------------------------------------------------------------------")
        logger.info("üëá –°–ö–û–ü–ò–†–£–ô–¢–ï –ò –í–´–ü–û–õ–ù–ò–¢–ï –≠–¢–£ –ö–û–ú–ê–ù–î–£ –í –í–ê–®–ï–ú –¢–ï–†–ú–ò–ù–ê–õ–ï (PowerShell):")
        print(f"\n{command}\n")
        logger.info("--------------------------------------------------------------------------")
        logger.info(f"‚öôÔ∏è  –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π —Å–∫—Ä–∏–ø—Ç: {script_path}")
        logger.info("‚è≥ –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã Blender –æ—Ç—Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ.")
        logger.info(f"üìÇ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã (—Ñ–∞–π–ª—ã .stl –∏ .obj) –ø–æ—è–≤—è—Ç—Å—è –≤ –ø–∞–ø–∫–µ: {engine.output_dir}")
        
    except Exception as e:
        logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É: {e}")

if __name__ == "__main__":
    main() 