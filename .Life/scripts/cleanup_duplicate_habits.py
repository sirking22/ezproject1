#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –ø—Ä–∏–≤—ã—á–µ–∫
–£–¥–∞–ª—è–µ—Ç:
1. –ü—Ä–∏–≤—ã—á–∫–∏ —Å –¥–∞—Ç–∞–º–∏ –≤ –Ω–∞–∑–≤–∞–Ω–∏—è—Ö (—Å—Ç–∞—Ä—ã–µ)
2. –ü—Ä–∏–≤—ã—á–∫–∏ –±–µ–∑ —Å–≤—è–∑–µ–π —Å —Ä–∏—Ç—É–∞–ª–∞–º–∏
3. –î—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –∑–∞–ø–∏—Å–∏
"""

import os
import sys
from datetime import datetime, timedelta
from typing import List, Dict, Any, Optional
from notion_client import Client
from dotenv import load_dotenv

load_dotenv()

# ID –±–∞–∑—ã –ø—Ä–∏–≤—ã—á–µ–∫
HABITS_DB_ID = "1fddb2b98a1b8053a54aedf250530798"

def cleanup_duplicate_habits():
    """–ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –ø—Ä–∏–≤—ã—á–µ–∫"""
    
    client = Client(auth=os.getenv("NOTION_TOKEN"))
    
    print("üîç –ü–æ–ª—É—á–∞—é –≤—Å–µ –ø—Ä–∏–≤—ã—á–∫–∏...")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–∏–≤—ã—á–∫–∏
    habits = client.databases.query(database_id=HABITS_DB_ID)
    
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(habits['results'])} –ø—Ä–∏–≤—ã—á–µ–∫")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏–≤—ã—á–∫–∏
    to_delete = []
    keep_habits = []
    
    for habit in habits['results']:
        habit_name = habit.get('properties', {}).get('–ü—Ä–∏–≤—ã—á–∫–∞', {}).get('title', [{}])[0].get('plain_text', '')
        ritual_relation = habit.get('properties', {}).get('–†–∏—Ç—É–∞–ª—ã', {}).get('relation', [])
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–µ—Ä–∏–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
        should_delete = False
        reason = ""
        
        # 1. –ü—Ä–∏–≤—ã—á–∫–∏ —Å –¥–∞—Ç–∞–º–∏ –≤ –Ω–∞–∑–≤–∞–Ω–∏—è—Ö
        if any(date_str in habit_name for date_str in ['2025-07-']):
            should_delete = True
            reason = "–¥–∞—Ç–∞ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏"
        
        # 2. –ü—Ä–∏–≤—ã—á–∫–∏ –±–µ–∑ —Å–≤—è–∑–µ–π —Å —Ä–∏—Ç—É–∞–ª–∞–º–∏
        elif not ritual_relation:
            should_delete = True
            reason = "–Ω–µ—Ç —Å–≤—è–∑–∏ —Å —Ä–∏—Ç—É–∞–ª–æ–º"
        
        # 3. –ü—É—Å—Ç—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏
        elif not habit_name.strip():
            should_delete = True
            reason = "–ø—É—Å—Ç–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ"
        
        if should_delete:
            to_delete.append({
                'id': habit['id'],
                'name': habit_name,
                'reason': reason
            })
        else:
            keep_habits.append({
                'id': habit['id'],
                'name': habit_name,
                'ritual_count': len(ritual_relation)
            })
    
    print(f"\nüóëÔ∏è  –ü—Ä–∏–≤—ã—á–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è ({len(to_delete)}):")
    for habit in to_delete:
        print(f"  - {habit['name']} ({habit['reason']})")
    
    print(f"\n‚úÖ –ü—Ä–∏–≤—ã—á–∫–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è ({len(keep_habits)}):")
    for habit in keep_habits:
        print(f"  - {habit['name']} (—Ä–∏—Ç—É–∞–ª–æ–≤: {habit['ritual_count']})")
    
    if not to_delete:
        print("\n‚ú® –ù–µ—Ç –ø—Ä–∏–≤—ã—á–µ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è!")
        return
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
    confirm = input(f"\n‚ùì –£–¥–∞–ª–∏—Ç—å {len(to_delete)} –ø—Ä–∏–≤—ã—á–µ–∫? (y/N): ")
    if confirm.lower() != 'y':
        print("‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
        return
    
    # –£–¥–∞–ª—è–µ–º –ø—Ä–∏–≤—ã—á–∫–∏
    print("\nüóëÔ∏è  –£–¥–∞–ª—è—é –ø—Ä–∏–≤—ã—á–∫–∏...")
    deleted_count = 0
    
    for habit in to_delete:
        try:
            client.pages.update(page_id=habit['id'], archived=True)
            print(f"  ‚úÖ –£–¥–∞–ª–µ–Ω–∞: {habit['name']}")
            deleted_count += 1
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è {habit['name']}: {e}")
    
    print(f"\nüéâ –£–¥–∞–ª–µ–Ω–æ {deleted_count} –∏–∑ {len(to_delete)} –ø—Ä–∏–≤—ã—á–µ–∫")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç...")
    remaining_habits = client.databases.query(database_id=HABITS_DB_ID)
    print(f"üìä –û—Å—Ç–∞–ª–æ—Å—å –ø—Ä–∏–≤—ã—á–µ–∫: {len(remaining_habits['results'])}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –ø—Ä–∏–≤—ã—á–∫–∏
    print("\nüìã –û—Å—Ç–∞–≤—à–∏–µ—Å—è –ø—Ä–∏–≤—ã—á–∫–∏:")
    for habit in remaining_habits['results']:
        habit_name = habit.get('properties', {}).get('–ü—Ä–∏–≤—ã—á–∫–∞', {}).get('title', [{}])[0].get('plain_text', '')
        ritual_relation = habit.get('properties', {}).get('–†–∏—Ç—É–∞–ª—ã', {}).get('relation', [])
        print(f"  - {habit_name} (—Ä–∏—Ç—É–∞–ª–æ–≤: {len(ritual_relation)})")

if __name__ == "__main__":
    cleanup_duplicate_habits() 