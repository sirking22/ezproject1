#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ —á–µ—Ä–µ–∑ Blender
"""

import asyncio
import sys
from pathlib import Path

# Add src to path
sys.path.insert(0, str(Path(__file__).parent.parent / "src"))

from integrations.blender_engine import (
    BlenderEngine, ObjectSpec, SceneSpec, ObjectType, MaterialType,
    Vector3, RenderSpec, ExportSpec, ExportFormat
)

async def create_artistic_scene():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–π —Å—Ü–µ–Ω—ã"""
    print("üé® –°–æ–∑–¥–∞–Ω–∏–µ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞...")
    
    engine = BlenderEngine()
    
    # –°–æ–∑–¥–∞–µ–º —Å—Ü–µ–Ω—É —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏
    scene_spec = SceneSpec(
        name="artistic_composition",
        camera_position=Vector3(10, -10, 8),
        camera_target=Vector3(0, 0, 0),
        lighting="studio",
        background_color=Vector3(0.1, 0.1, 0.15)
    )
    
    # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è —Å—Ñ–µ—Ä–∞ –∏–∑ —Å—Ç–µ–∫–ª–∞
    glass_sphere = ObjectSpec(
        name="glass_sphere",
        object_type=ObjectType.SPHERE,
        position=Vector3(0, 0, 2),
        radius=2.0,
        segments=64,
        material_type=MaterialType.GLASS,
        color=Vector3(0.9, 0.95, 1.0),
        transparency=0.2,
        roughness=0.1
    )
    scene_spec.objects.append(glass_sphere)
    
    # –ú–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–µ –∫–æ–ª—å—Ü–∞ –≤–æ–∫—Ä—É–≥
    for i in range(3):
        angle = i * 120  # 120 –≥—Ä–∞–¥—É—Å–æ–≤ –º–µ–∂–¥—É –∫–æ–ª—å—Ü–∞–º–∏
        x = 4 * (1 if i == 0 else 0.5 if i == 1 else -0.5)
        y = 4 * (0 if i == 0 else 0.866 if i == 1 else -0.866)
        
        ring = ObjectSpec(
            name=f"metal_ring_{i+1}",
            object_type=ObjectType.TORUS,
            position=Vector3(x, y, 1.5 + i * 0.5),
            radius=1.5,
            material_type=MaterialType.METAL,
            color=Vector3(0.8, 0.6, 0.2),  # –ó–æ–ª–æ—Ç–∏—Å—Ç—ã–π
            metallic=0.9,
            roughness=0.2
        )
        scene_spec.objects.append(ring)
    
    # –û—Å–Ω–æ–≤–∞–Ω–∏–µ –∏–∑ –¥–µ—Ä–µ–≤–∞
    base = ObjectSpec(
        name="wooden_base",
        object_type=ObjectType.CUBE,
        position=Vector3(0, 0, -1),
        dimensions=Vector3(12, 12, 1),
        material_type=MaterialType.WOOD,
        color=Vector3(0.6, 0.4, 0.2),
        roughness=0.8
    )
    scene_spec.objects.append(base)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–Ω–¥–µ—Ä–∞
    render_spec = RenderSpec(
        resolution_x=1920,
        resolution_y=1080,
        samples=128,
        engine="CYCLES",
        output_path="output/artistic_composition_render.png"
    )
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞
    export_spec = ExportSpec(
        format=ExportFormat.STL,
        output_path="output/artistic_composition.stl",
        scale=1.0
    )
    
    print("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ü–µ–Ω—ã...")
    results = await engine.create_scene(scene_spec, render_spec, export_spec)
    
    print("‚úÖ –•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–æ–º–ø–æ–∑–∏—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞!")
    print(f"üìÅ –§–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: output/")
    print(f"üñºÔ∏è –†–µ–Ω–¥–µ—Ä: {render_spec.output_path}")
    print(f"üì¶ STL: {export_spec.output_path}")
    
    return results

async def create_organic_lamp():
    """–°–æ–∑–¥–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–æ–π –ª–∞–º–ø—ã —á–µ—Ä–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä"""
    print("üí° –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–æ–π –ª–∞–º–ø—ã...")
    
    try:
        from integrations.blender_integration import BlenderIntegration
        
        integration = BlenderIntegration()
        
        if not integration.is_available():
            print("‚ùå Blender API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return
        
        # –°–æ–∑–¥–∞–µ–º –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫—É—é –ª–∞–º–ø—É
        request_data = {
            'type': 'organic_lamp',
            'base_radius': 80.0,
            'complexity': 1.5,
            'name': 'ArtisticLamp'
        }
        
        result = integration.generate_3d_object(request_data)
        
        if result['success']:
            print(f"‚úÖ –û—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∞—è –ª–∞–º–ø–∞ —Å–æ–∑–¥–∞–Ω–∞!")
            print(f"üìÅ –§–∞–π–ª: {result['filepath']}")
            print(f"üñºÔ∏è –ü—Ä–µ–≤—å—é: {result['preview_path']}")
            print(f"üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {result['object_info']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {result['error']}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–æ–π –ª–∞–º–ø—ã: {e}")

if __name__ == "__main__":
    print("üé® –•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –º–∞—Å—Ç–µ—Ä—Å–∫–∞—è Blender")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—É—é —Å—Ü–µ–Ω—É
    asyncio.run(create_artistic_scene())
    
    print("\n" + "=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫—É—é –ª–∞–º–ø—É
    asyncio.run(create_organic_lamp())
    
    print("\nüéâ –í—Å–µ –æ–±—ä–µ–∫—Ç—ã —Å–æ–∑–¥–∞–Ω—ã!") 