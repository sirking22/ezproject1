from flask import Flask, request, jsonify
import json
import time

app = Flask(__name__)

# Mock LLM responses
def mock_llm_response(prompt, context="home"):
    responses = {
        "home": "–≠—Ç–æ –¥–æ–º–∞—à–Ω–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç. –Ø –ø–æ–º–æ–≥—É —Å –ª–∏—á–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏.",
        "work": "–≠—Ç–æ —Ä–∞–±–æ—á–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç. –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å –ø—Ä–æ–µ–∫—Ç–∞–º–∏.",
        "health": "–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à–∏ –±–∏–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ. –†–µ–∫–æ–º–µ–Ω–¥—É—é –±–æ–ª—å—à–µ –¥–≤–∏–∂–µ–Ω–∏—è.",
        "voice": "–ü–æ–Ω—è–ª –≤–∞—à –≥–æ–ª–æ—Å–æ–≤–æ–π –∑–∞–ø—Ä–æ—Å. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é...",
        "default": "–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç."
    }
    
    # Simulate processing time
    time.sleep(0.5)
    
    if "–∑–¥–æ—Ä–æ–≤—å–µ" in prompt.lower() or "–±–∏–æ–º–µ—Ç—Ä–∏—è" in prompt.lower():
        return responses["health"]
    elif "—Ä–∞–±–æ—Ç–∞" in prompt.lower() or "–ø—Ä–æ–µ–∫—Ç" in prompt.lower():
        return responses["work"]
    elif "–≥–æ–ª–æ—Å" in prompt.lower() or "–∫–æ–º–∞–Ω–¥–∞" in prompt.lower():
        return responses["voice"]
    else:
        return responses.get(context, responses["default"])

@app.route('/health', methods=['GET'])
def health_check():
    return jsonify({
        "status": "healthy",
        "server": "Local LLM Server",
        "version": "1.0.0"
    })

@app.route('/generate', methods=['POST'])
def generate_text():
    try:
        data = request.get_json()
        prompt = data.get('prompt', '')
        context = data.get('context', 'home')
        
        response = mock_llm_response(prompt, context)
        
        return jsonify({
            "response": response,
            "context": context,
            "timestamp": time.time()
        })
    except Exception as e:
        return jsonify({"error": str(e)}), 400

@app.route('/analyze_biometrics', methods=['POST'])
def analyze_biometrics():
    try:
        data = request.get_json()
        heart_rate = data.get('heart_rate', 70)
        steps = data.get('steps', 0)
        sleep_hours = data.get('sleep_hours', 7)
        
        # Simple analysis
        if heart_rate > 100:
            recommendation = "–°–µ—Ä–¥—Ü–µ–±–∏–µ–Ω–∏–µ –ø–æ–≤—ã—à–µ–Ω–Ω–æ–µ. –†–µ–∫–æ–º–µ–Ω–¥—É—é –æ—Ç–¥—ã—Ö."
        elif steps < 5000:
            recommendation = "–ú–∞–ª–æ —à–∞–≥–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–æ–≥—É–ª—è—Ç—å—Å—è."
        elif sleep_hours < 7:
            recommendation = "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–Ω–∞. –°—Ç–∞—Ä–∞–π—Ç–µ—Å—å —Å–ø–∞—Ç—å 7-8 —á–∞—Å–æ–≤."
        else:
            recommendation = "–û—Ç–ª–∏—á–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ."
        
        return jsonify({
            "analysis": f"–ü—É–ª—å—Å: {heart_rate}, –®–∞–≥–∏: {steps}, –°–æ–Ω: {sleep_hours}—á",
            "recommendation": recommendation,
            "health_score": min(100, (heart_rate/120*50 + steps/10000*30 + sleep_hours/8*20))
        })
    except Exception as e:
        return jsonify({"error": str(e)}), 400

@app.route('/voice_command', methods=['POST'])
def voice_command():
    try:
        data = request.get_json()
        command = data.get('command', '')
        
        # Process voice commands
        if "–∑–∞–¥–∞—á–∞" in command.lower():
            response = "–°–æ–∑–¥–∞—é –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É –≤ Notion..."
        elif "–ø—Ä–∏–≤—ã—á–∫–∞" in command.lower():
            response = "–û—Ç–º–µ—á–∞—é –ø—Ä–∏–≤—ã—á–∫—É –≤ —Ç—Ä–µ–∫–µ—Ä–µ..."
        elif "–ø–æ–≥–æ–¥–∞" in command.lower():
            response = "–ü—Ä–æ–≤–µ—Ä—è—é –ø–æ–≥–æ–¥—É –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ..."
        elif "–∑–¥–æ—Ä–æ–≤—å–µ" in command.lower():
            response = "–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à–∏ –±–∏–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ..."
        else:
            response = f"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∫–æ–º–∞–Ω–¥—É: {command}"
        
        return jsonify({
            "response": response,
            "command": command,
            "processed": True
        })
    except Exception as e:
        return jsonify({"error": str(e)}), 400

if __name__ == '__main__':
    print("üöÄ –ó–∞–ø—É—Å–∫ Local LLM Server...")
    print("üìç –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞: http://localhost:8000")
    print("üîó Health check: http://localhost:8000/health")
    print("üì± –ì–æ—Ç–æ–≤ –∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π!")
    print("‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("-" * 50)
    
    app.run(host='0.0.0.0', port=8000, debug=True) 