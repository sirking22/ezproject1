#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–π —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏ —Å —Ç–æ—á–Ω—ã–º —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ–º –≥–æ–≤–æ—Ä—è—â–∏—Ö
"""

import os
import sys
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª
load_dotenv()

from transcribe_with_speakers import AssemblyAITranscriber

def main():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—É—é —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—é"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á
        api_key = os.getenv('ASSEMBLYAI_API_KEY')
        if not api_key:
            print("‚ùå ASSEMBLYAI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
            print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env —Ñ–∞–π–ª")
            return
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç—Ä–∞–Ω—Å–∫—Ä–∞–π–±–µ—Ä–∞
        transcriber = AssemblyAITranscriber()
        
        # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–µ
        audio_path = "/audio_transcribe/record.ogg"
        
        print("üé§ –ù–∞—á–∏–Ω–∞—é –£–õ–£–ß–®–ï–ù–ù–£–Æ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—é...")
        print(f"üìÅ –§–∞–π–ª: {audio_path}")
        print(f"üîë API –∫–ª—é—á: {api_key[:10]}...")
        print()
        print("üöÄ –£–ª—É—á—à–µ–Ω–∏—è:")
        print("  ‚úÖ –¢–æ—á–Ω–æ–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ 4-6 –≥–æ–≤–æ—Ä—è—â–∏—Ö")
        print("  ‚úÖ –ê–Ω–∞–ª–∏–∑ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è")
        print("  ‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ —Å–ª–æ–≤–∞–º")
        print("  ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ (Speaker A, B, C...)")
        print("  ‚úÖ –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –≤—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏—è")
        print("  ‚úÖ –†—É—Å—Å–∫–∏–π —è–∑—ã–∫ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è")
        print()
        
        # –¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è
        result = transcriber.transcribe_audio(audio_path, "improved_transcript")
        
        print(f"\n‚úÖ –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print(f"üë• –ù–∞–π–¥–µ–Ω–æ –≥–æ–≤–æ—Ä—è—â–∏—Ö: {result['speakers_count']}")
        print(f"üìÑ Word –¥–æ–∫—É–º–µ–Ω—Ç: {result['word_file']}")
        print(f"üìù Markdown —Ñ–∞–π–ª: {result['markdown_file']}")
        print()
        print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞ –≤ –¥–æ–∫—É–º–µ–Ω—Ç—ã!")
        print("üåê –ü—É–±–ª–∏—á–Ω–∞—è –ø–∞–ø–∫–∞: https://yadi.sk/d/9bDnaC7TPqtnLQ")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main() 