#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –∑–∞–ø—É—Å–∫ –∏–º–ø–æ—Ä—Ç–∞ –≤ Notion
–°–ª–µ–¥–∏—Ç –∑–∞ –∑–∞–≥—Ä—É–∑–∫–æ–π —Ñ–∞–π–ª–æ–≤ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –∏–º–ø–æ—Ä—Ç –≤ Notion
"""

import os
import time
import asyncio
import subprocess
import yadisk
from datetime import datetime
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

class AutoImportMonitor:
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –∏–º–ø–æ—Ä—Ç"""
    
    def __init__(self):
        self.target_folder = "/TelegramImport_20250621_025209"
        self.expected_groups = 282  # –ì—Ä—É–ø–ø —Å —Ñ–∞–π–ª–∞–º–∏
        self.expected_files = 599   # –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤
        self.groups_file = "telegram_groups_20250621_024246.json"
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫
        ya_token = os.getenv('YA_ACCESS_TOKEN')
        self.yadisk = yadisk.YaDisk(token=ya_token) if ya_token else None
        
        if self.yadisk and self.yadisk.check_token():
            logger.info("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫—É —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        else:
            logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫—É")
    
    def check_upload_progress(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤"""
        if not self.yadisk:
            return None
        
        try:
            total_files = 0
            total_groups = 0
            recent_activity = False
            current_time = datetime.now()
            
            for item in self.yadisk.listdir(self.target_folder):
                if item.type == 'dir':
                    total_groups += 1
                    try:
                        group_folder = f"{self.target_folder}/{item.name}"
                        for file_item in self.yadisk.listdir(group_folder):
                            if file_item.type == 'file':
                                total_files += 1
                                
                                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–¥–∞–≤–Ω—é—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –º–∏–Ω—É—Ç)
                                if file_item.modified:
                                    time_diff = current_time - file_item.modified.replace(tzinfo=None)
                                    if time_diff.total_seconds() < 600:  # 10 –º–∏–Ω—É—Ç
                                        recent_activity = True
                    except Exception as e:
                        logger.warning(f"–û—à–∏–±–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞–ø–∫–∏ {item.name}: {e}")
            
            progress_percent = (total_files / self.expected_files * 100) if self.expected_files > 0 else 0
            
            return {
                'total_files': total_files,
                'total_groups': total_groups,
                'progress_percent': progress_percent,
                'recent_activity': recent_activity,
                'is_complete': total_files >= self.expected_files and not recent_activity
            }
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: {e}")
            return None
    
    def run_notion_import(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∏–º–ø–æ—Ä—Ç –≤ Notion"""
        try:
            logger.info("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç –≤ Notion...")
            
            # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –≤ Notion
            cmd = [
                "python", 
                "notion_only_importer.py",
                self.groups_file,
                self.target_folder
            ]
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
            process = subprocess.Popen(
                cmd,
                stdin=subprocess.PIPE,
                stdout=subprocess.PIPE,
                stderr=subprocess.PIPE,
                text=True,
                cwd=os.getcwd()
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º 'y' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            stdout, stderr = process.communicate(input='y\n')
            
            if process.returncode == 0:
                logger.info("‚úÖ –ò–º–ø–æ—Ä—Ç –≤ Notion –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
                logger.info(f"–í—ã–≤–æ–¥: {stdout}")
                return True
            else:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –≤ Notion: {stderr}")
                return False
                
        except Exception as e:
            logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
            return False
    
    async def monitor_and_import(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
        logger.info("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤...")
        logger.info(f"üéØ –û–∂–∏–¥–∞–µ–º: {self.expected_files} —Ñ–∞–π–ª–æ–≤ –≤ {self.expected_groups} –≥—Ä—É–ø–ø–∞—Ö")
        
        check_interval = 60  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
        max_wait_time = 3600  # –ú–∞–∫—Å–∏–º—É–º 1 —á–∞—Å –æ–∂–∏–¥–∞–Ω–∏—è
        start_time = time.time()
        
        last_file_count = 0
        stable_count = 0  # –°—á–µ—Ç—á–∏–∫ —Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
        
        while True:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
            progress = self.check_upload_progress()
            
            if not progress:
                logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å")
                await asyncio.sleep(check_interval)
                continue
            
            current_time = datetime.now().strftime('%H:%M:%S')
            logger.info(f"‚è∞ {current_time} | üìä {progress['total_files']}/{self.expected_files} —Ñ–∞–π–ª–æ–≤ ({progress['progress_percent']:.1f}%) | üìÇ {progress['total_groups']} –≥—Ä—É–ø–ø")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å (–Ω–µ—Ç –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤)
            if progress['total_files'] == last_file_count:
                stable_count += 1
            else:
                stable_count = 0
                last_file_count = progress['total_files']
            
            # –£—Å–ª–æ–≤–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏–º–ø–æ—Ä—Ç–∞
            should_import = False
            reason = ""
            
            if progress['is_complete']:
                should_import = True
                reason = "–í—Å–µ —Ñ–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"
            elif stable_count >= 5 and progress['total_files'] > 0:
                should_import = True
                reason = f"–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å 5 –º–∏–Ω—É—Ç, –µ—Å—Ç—å {progress['total_files']} —Ñ–∞–π–ª–æ–≤"
            elif time.time() - start_time > max_wait_time:
                should_import = True
                reason = "–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è (1 —á–∞—Å)"
            
            if should_import:
                logger.info(f"üéØ –£—Å–ª–æ–≤–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: {reason}")
                logger.info(f"üìä –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
                logger.info(f"   üìÑ –§–∞–π–ª–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {progress['total_files']}")
                logger.info(f"   üìÇ –ì—Ä—É–ø–ø –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {progress['total_groups']}")
                logger.info(f"   üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {progress['progress_percent']:.1f}%")
                
                # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–º–ø–æ—Ä—Ç –≤ Notion
                success = self.run_notion_import()
                
                if success:
                    logger.info("üéâ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ò–ú–ü–û–†–¢ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
                else:
                    logger.error("‚ùå –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–∞–º–∏")
                
                break
            
            # –ñ–¥–µ–º —Å–ª–µ–¥—É—é—â—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
            await asyncio.sleep(check_interval)
        
        logger.info("üèÅ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("ü§ñ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ú–û–ù–ò–¢–û–†–ò–ù–ì –ò –ò–ú–ü–û–†–¢")
    print("=" * 50)
    print("üîÑ –°–ª–µ–∂—É –∑–∞ –∑–∞–≥—Ä—É–∑–∫–æ–π —Ñ–∞–π–ª–æ–≤ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫")
    print("üìù –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—â—É –∏–º–ø–æ—Ä—Ç –≤ Notion –∫–æ–≥–¥–∞ –≤—Å–µ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è")
    print("‚è∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É")
    print("üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print()
    
    monitor = AutoImportMonitor()
    
    try:
        await monitor.monitor_and_import()
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(main()) 