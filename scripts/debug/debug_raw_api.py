import os
import requests
import json
from dotenv import load_dotenv

load_dotenv()

NOTION_TOKEN = os.getenv("NOTION_TOKEN")
TASKS_DB_ID = os.getenv("NOTION_TASKS_DB_ID", "9c5f4269d61449b6a7485579a3c21da3")

if not NOTION_TOKEN:
    raise RuntimeError("NOTION_TOKEN –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–¥–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

print("üîç –û–¢–õ–ê–î–ö–ê –°–´–†–´–• –î–ê–ù–ù–´–• API")
print("=" * 50)
print(f"–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {TASKS_DB_ID}")

url = f"https://api.notion.com/v1/databases/{TASKS_DB_ID}/query"
headers = {
    "Authorization": f"Bearer {NOTION_TOKEN}",
    "Notion-Version": "2022-06-28",
    "Content-Type": "application/json"
}

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 5 –∑–∞–¥–∞—á
payload = {"page_size": 5}
response = requests.post(url, headers=headers, json=payload)

if response.status_code != 200:
    print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
    print(f"–û—Ç–≤–µ—Ç: {response.text}")
    exit(1)

data = response.json()
results = data.get('results', [])

print(f"üìä –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–¥–∞—á: {len(results)}")

for i, task in enumerate(results, 1):
    print(f"\n{i}. –ó–ê–î–ê–ß–ê {task['id']}")
    print("-" * 40)
    
    props = task.get("properties", {})
    print(f"–ü–æ–ª—è: {list(props.keys())}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç—É—Å–∞
    if " –°—Ç–∞—Ç—É—Å" in props:
        print(f"–°—Ç–∞—Ç—É—Å (—Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ): {json.dumps(props[' –°—Ç–∞—Ç—É—Å'], indent=2)}")
    elif "–°—Ç–∞—Ç—É—Å" in props:
        print(f"–°—Ç–∞—Ç—É—Å (—Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ): {json.dumps(props['–°—Ç–∞—Ç—É—Å'], indent=2)}")
    else:
        print("–°—Ç–∞—Ç—É—Å: –ù–ï –ù–ê–ô–î–ï–ù")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ
    if "–ó–∞–¥–∞—á–∏" in props:
        print(f"–ù–∞–∑–≤–∞–Ω–∏–µ (—Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ): {json.dumps(props['–ó–∞–¥–∞—á–∏'], indent=2)}")
    else:
        print("–ù–∞–∑–≤–∞–Ω–∏–µ: –ù–ï –ù–ê–ô–î–ï–ù–û")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
    if "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å" in props:
        print(f"–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å (—Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ): {json.dumps(props['–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å'], indent=2)}")
    else:
        print("–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: –ù–ï –ù–ê–ô–î–ï–ù")

print(f"\nüí° –ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ —è –ø—Ä–∞–≤–∏–ª—å–Ω–æ —á–∏—Ç–∞—é —Å—Ç–∞—Ç—É—Å—ã!") 