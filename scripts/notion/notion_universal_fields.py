#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üîß –î–û–ë–ê–í–õ–ï–ù–ò–ï –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–• –ü–û–õ–ï–ô –í NOTION –î–ê–®–ë–û–†–î

–î–æ–±–∞–≤–ª—è–µ—Ç –∫–ª—é—á–µ–≤—ã–µ –ø–æ–ª—è –¥–ª—è –≤—Å–µ—Ö —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º:
‚úÖ Engagement Rate, Growth Rate, Platform Rank
‚úÖ Content Score, vs Industry
‚úÖ –ê–ª–µ—Ä—Ç—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
"""

import requests
import os
import json
import logging
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)

class NotionUniversalFields:
    """–ö–ª–∞—Å—Å –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π –≤ Notion"""
    
    def __init__(self):
        self.notion_token = os.getenv('NOTION_TOKEN')
        self.platforms_db_id = os.getenv('NOTION_PLATFORMS_DB_ID')
        
        self.headers = {
            'Authorization': f'Bearer {self.notion_token}',
            'Content-Type': 'application/json',
            'Notion-Version': '2022-06-28'
        }
    
    def add_universal_fields(self):
        """–î–æ–±–∞–≤–ª—è–µ—Ç —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –ø–æ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º"""
        
        print("üîß –î–û–ë–ê–í–õ–ï–ù–ò–ï –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–• –ü–û–õ–ï–ô –í NOTION")
        print("=" * 60)
        
        # –ü–æ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        fields_to_add = {
            "Engagement Rate": {
                "number": {
                    "format": "percent"
                }
            },
            "Growth Rate": {
                "number": {
                    "format": "percent"
                }
            },
            "Platform Rank": {
                "select": {
                    "options": [
                        {"name": "Excellent", "color": "green"},
                        {"name": "High", "color": "blue"},
                        {"name": "Medium", "color": "yellow"},
                        {"name": "Low", "color": "red"}
                    ]
                }
            },
            "Content Score": {
                "number": {
                    "format": "number"
                }
            },
            "vs Industry": {
                "number": {
                    "format": "percent"
                }
            },
            "Reach Rate": {
                "number": {
                    "format": "percent"
                }
            },
            "Posts per Week": {
                "number": {
                    "format": "number"
                }
            },
            "Alert Status": {
                "select": {
                    "options": [
                        {"name": "üöÄ Excellent", "color": "green"},
                        {"name": "‚úÖ Good", "color": "blue"},
                        {"name": "‚ö†Ô∏è Warning", "color": "yellow"},
                        {"name": "üö® Critical", "color": "red"}
                    ]
                }
            },
            "Last Analytics": {
                "date": {}
            },
            "Next Action": {
                "rich_text": {}
            }
        }
        
        try:
            url = f"https://api.notion.so/v1/databases/{self.platforms_db_id}"
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∞–∑—ã
            response = requests.get(url, headers=self.headers)
            response.raise_for_status()
            
                db_data = response.json()
                current_properties = db_data.get('properties', {})
                
                # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª—è
                updated_properties = current_properties.copy()
                
                for field_name, field_config in fields_to_add.items():
                    if field_name not in current_properties:
                        updated_properties[field_name] = field_config
                        print(f"   ‚ûï –î–æ–±–∞–≤–ª—è—é –ø–æ–ª–µ: {field_name}")
                    else:
                        print(f"   ‚úÖ –ü–æ–ª–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {field_name}")
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                update_data = {
                    "properties": updated_properties
                }
                
                update_response = requests.patch(url, headers=self.headers, json=update_data)
                
                if update_response.status_code == 200:
                    print("\n‚úÖ –ü–æ–ª—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!")
                    self.show_field_descriptions()
                    return True
                else:
                    print(f"\n‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {update_response.status_code}")
                    print(update_response.text)
                    return False
            
        except requests.RequestException as e:
            logger.error(f"Error in GET request: {e}")
            return None
    
    def show_field_descriptions(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–æ–ª–µ–π"""
        
        descriptions = """
üìä –û–ü–ò–°–ê–ù–ò–ï –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–• –ü–û–õ–ï–ô:

üéØ –û–°–ù–û–í–ù–´–ï KPI:
   ‚Ä¢ Engagement Rate - % –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π (–ª–∞–π–∫–∏ + –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ + —à–µ–π—Ä—ã) / –ø–æ–¥–ø–∏—Å—á–∏–∫–∏
   ‚Ä¢ Growth Rate - % —Ä–æ—Å—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –∑–∞ –º–µ—Å—è—Ü
   ‚Ä¢ Reach Rate - % –æ—Ö–≤–∞—Ç–∞ –∞—É–¥–∏—Ç–æ—Ä–∏–∏ (–ø—Ä–æ—Å–º–æ—Ç—Ä—ã / –ø–æ–¥–ø–∏—Å—á–∏–∫–∏)

üèÜ –ö–ê–ß–ï–°–¢–í–ï–ù–ù–´–ï –ü–û–ö–ê–ó–ê–¢–ï–õ–ò:
   ‚Ä¢ Platform Rank - –†–µ–π—Ç–∏–Ω–≥ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã (Excellent/High/Medium/Low)
   ‚Ä¢ Content Score - –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (1-10)
   ‚Ä¢ vs Industry - % –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Ç –∏–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω—ã—Ö –±–µ–Ω—á–º–∞—Ä–∫–æ–≤

üìà –û–ü–ï–†–ê–¶–ò–û–ù–ù–´–ï –ú–ï–¢–†–ò–ö–ò:
   ‚Ä¢ Posts per Week - –ß–∞—Å—Ç–æ—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–π
   ‚Ä¢ Alert Status - –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∞–ª–µ—Ä—Ç–æ–≤
   ‚Ä¢ Next Action - –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è

‚è∞ –í–†–ï–ú–ï–ù–ù–´–ï –ú–ï–¢–†–ò–ö–ò:
   ‚Ä¢ Last Analytics - –î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞

–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:
1. –ó–∞–ø—É—Å–∫–∞—Ç—å universal_social_metrics.py –¥–ª—è –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
2. –ê–ª–µ—Ä—Ç—ã –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ—Å—Ç–∞–≤–ª—è—Ç—å—Å—è –≤ Alert Status
3. Next Action –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
"""
        print(descriptions)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üöÄ –ù–ê–°–¢–†–û–ô–ö–ê –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–• –ü–û–õ–ï–ô –í NOTION")
    print("=" * 60)
    
    notion_fields = NotionUniversalFields()
    
    success = notion_fields.add_universal_fields()
    
    if success:
        print("\nüéâ –ì–û–¢–û–í–û! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å universal_social_metrics.py")
        print("\nüìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
        print("   1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–æ–≤—ã–µ –ø–æ–ª—è –≤ Notion –¥–∞—à–±–æ—Ä–¥–µ")
        print("   2. –ó–∞–ø—É—Å—Ç–∏—Ç—å python universal_social_metrics.py")
        print("   3. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫")
    else:
        print("\n‚ùå –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω—ã –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞.")

if __name__ == "__main__":
    main() 