import asyncio
from notion_mcp_server import NotionMCPServer

async def analyze_tasks_via_mcp():
    """–ê–Ω–∞–ª–∏–∑ –∑–∞–¥–∞—á —á–µ—Ä–µ–∑ –Ω–∞—à NotionMCPServer"""
    
    server = NotionMCPServer()
    
    print("üéØ –ê–ù–ê–õ–ò–ó –ó–ê–î–ê–ß –ß–ï–†–ï–ó MCP –°–ï–†–í–ï–†")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–¥–∞—á–∏ –≤ —Å—Ç–∞—Ç—É—Å–µ To Do
    print("üìã –ü–æ–ª—É—á–∞–µ–º –∑–∞–¥–∞—á–∏ –≤ —Å—Ç–∞—Ç—É—Å–µ 'To do'...")
    
    result_list = list(await server.call_tool(
        "analyze_notion_completeness",
        {
            "database_id": "9c5f4269d61449b6a7485579a3c21da3",  # Tasks DB
            "freshness_days": 30
        }
    ))
    
    print("\n===== –†–ï–ó–£–õ–¨–¢–ê–¢ –ê–ù–ê–õ–ò–ó–ê =====")
    if result_list:
        print(str(result_list[0]))
    print("=============================")
    
    # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∞–∑—ã
    print("\nüìä –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∞–∑—ã –∑–∞–¥–∞—á...")
    
    result_list = list(await server.call_tool(
        "get_notion_database_structure",
        {
            "database_id": "9c5f4269d61449b6a7485579a3c21da3"
        }
    ))
    
    print("\n===== –°–¢–†–£–ö–¢–£–†–ê –ë–ê–ó–´ =====")
    if result_list:
        print(str(result_list[0]))
    print("==========================")

if __name__ == "__main__":
    asyncio.run(analyze_tasks_via_mcp()) 