name: Schema Validation & Documentation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'notion_database_schemas.py'
      - 'test_schemas_integration.py'
      - '.github/workflows/schema-validation.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'notion_database_schemas.py'
      - 'test_schemas_integration.py'
      - '.github/workflows/schema-validation.yml'

jobs:
  validate-schemas:
    name: Validate Notion Database Schemas
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install notion-client
          pip install mcp
          
      - name: Validate environment variables
        run: |
          echo "Checking required environment variables..."
          if [ -z "$NOTION_TOKEN" ]; then
            echo "‚ö†Ô∏è NOTION_TOKEN not set - some tests may fail"
          else
            echo "‚úÖ NOTION_TOKEN is set"
          fi
          
      - name: Run schema validation tests
        run: |
          echo "üß™ Running schema validation tests..."
          python test_schemas_integration.py
          
      - name: Generate documentation
        run: |
          echo "üìö Generating schema documentation..."
          python -c "
          from test_schemas_integration import generate_schema_documentation
          generate_schema_documentation()
          print('‚úÖ Documentation generated successfully')
          "
          
      - name: Check documentation changes
        run: |
          echo "üîç Checking if documentation was updated..."
          if git diff --quiet notion_schemas_documentation.json; then
            echo "‚úÖ Documentation is up to date"
          else
            echo "üìù Documentation was updated"
            git diff notion_schemas_documentation.json
          fi
          
      - name: Validate schema consistency
        run: |
          echo "üîç Validating schema consistency..."
          python -c "
          from notion_database_schemas import get_all_schemas
          schemas = get_all_schemas()
          
          # Check for duplicate database IDs
          db_ids = [schema.database_id for schema in schemas.values()]
          if len(db_ids) != len(set(db_ids)):
              print('‚ùå Duplicate database IDs found!')
              exit(1)
          
          # Check for missing required fields
          for name, schema in schemas.items():
              if not schema.database_id:
                  print(f'‚ùå Missing database_id for {name}')
                  exit(1)
              if not schema.name:
                  print(f'‚ùå Missing name for {name}')
                  exit(1)
          
          print('‚úÖ Schema consistency validation passed')
          "
          
      - name: Upload documentation artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: schema-documentation
          path: notion_schemas_documentation.json
          retention-days: 30
          
  notify-on-failure:
    name: Notify on Schema Validation Failure
    runs-on: ubuntu-latest
    needs: validate-schemas
    if: failure()
    
    steps:
      - name: Notify failure
        run: |
          echo "‚ùå Schema validation failed!"
          echo "Please check the logs and fix any issues with notion_database_schemas.py"
          echo "Common issues:"
          echo "- Missing required fields in DatabaseSchema"
          echo "- Invalid database IDs"
          echo "- Duplicate database IDs"
          echo "- Syntax errors in schema definitions" 