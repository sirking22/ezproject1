import os
import requests
import json
from dotenv import load_dotenv

load_dotenv()

NOTION_TOKEN = os.getenv("NOTION_TOKEN")
TASKS_DB_ID = "d09df250ce7e4e0d9fbe4e036d320def"

if not NOTION_TOKEN:
    raise RuntimeError("NOTION_TOKEN –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–¥–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

def find_task_by_title(title):
    """–ù–∞–π—Ç–∏ –∑–∞–¥–∞—á—É –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é"""
    url = f"https://api.notion.com/v1/databases/{TASKS_DB_ID}/query"
    headers = {
        "Authorization": f"Bearer {NOTION_TOKEN}",
        "Notion-Version": "2022-06-28",
        "Content-Type": "application/json"
    }
    
    payload = {
        "filter": {
            "property": "–ó–∞–¥–∞—á–∞",
            "title": {
                "contains": title
            }
        }
    }
    
    response = requests.post(url, headers=headers, json=payload)
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∑–∞–¥–∞—á–∏: {response.status_code}")
        return None
    
    data = response.json()
    results = data.get('results', [])
    
    if results:
        return results[0]
    return None

def main():
    print("üîç –î–ï–¢–ê–õ–ò –ó–ê–î–ê–ß–ò '–ò–ö–û–ù–ö–ò'")
    print("=" * 40)
    
    task = find_task_by_title("–ò–∫–æ–Ω–∫–∏")
    if not task:
        print("‚ùå –ó–∞–¥–∞—á–∞ '–ò–∫–æ–Ω–∫–∏' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    print(f"ID –∑–∞–¥–∞—á–∏: {task['id']}")
    print(f"–ù–∞–∑–≤–∞–Ω–∏–µ: {task['properties']['–ó–∞–¥–∞—á–∞']['title'][0]['plain_text']}")
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º –≤—Å–µ —Å–≤–æ–π—Å—Ç–≤–∞
    print("\nüìã –í–°–ï –°–í–û–ô–°–¢–í–ê:")
    for prop_name, prop_value in task['properties'].items():
        print(f"\n{prop_name}:")
        print(f"  –¢–∏–ø: {prop_value.get('type', 'unknown')}")
        print(f"  –ó–Ω–∞—á–µ–Ω–∏–µ: {json.dumps(prop_value, indent=2, ensure_ascii=False)}")
    
    # –û—Å–æ–±–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º
    if '–£—á–∞—Å—Ç–Ω–∏–∫–∏' in task['properties']:
        participants = task['properties']['–£—á–∞—Å—Ç–Ω–∏–∫–∏']
        print(f"\nüë• –£–ß–ê–°–¢–ù–ò–ö–ò:")
        print(f"  –¢–∏–ø: {participants.get('type')}")
        if participants.get('people'):
            for person in participants['people']:
                print(f"  - {person.get('name', '–ë–µ–∑ –∏–º–µ–Ω–∏')} (ID: {person.get('id')})")
        else:
            print("  –ù–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")

if __name__ == "__main__":
    main() 